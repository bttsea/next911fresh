{"version":3,"names":["_chalk","_interopRequireDefault","require","_textTable","_unistore","_stripAnsi","_formatWebpackMessages","_store","_forkTsCheckerWebpackPlugin","_codeframeFormatter","e","__esModule","default","startedDevelopmentServer","appUrl","consoleStore","setState","previousClient","previousServer","WebpackStatusPhase","getWebpackStatusPhase","status","loading","COMPILING","errors","COMPILED_WITH_ERRORS","typeChecking","TYPE_CHECKING","warnings","COMPILED_WITH_WARNINGS","COMPILED","formatAmpMessages","amp","output","chalk","bold","messages","chalkError","red","ampError","page","error","push","message","specUrl","chalkWarn","yellow","ampWarn","warn","devOnlyFilter","err","code","filter","length","index","textTable","align","stringLength","str","stripAnsi","buildStore","createStore","subscribe","state","client","server","phase","sort","a","b","valueOf","bootstrap","bootstrapping","getState","partialState","Object","keys","concat","ampValidation","k","reduce","c","newAmp","watchCompilers","enableTypeCheckingOnClient","onTypeChecked","tapCompiler","key","compiler","hasTypeChecking","onEvent","tsMessagesPromise","tsMessagesResolver","hooks","invalid","tap","undefined","typescriptFormatter","createCodeframeFormatter","beforeCompile","Promise","resolve","msgs","forkTsCheckerWebpackPlugin","getCompilerHooks","receive","diagnostics","lints","allMsgs","format","msg","severity","map","d","file","replace","done","stats","formatWebpackMessages","toJson","all","hasErrors","hasWarnings","typePromise","then","typeMessages","reportFiles","compilation","modules","m","resource","Boolean","filteredErrors","includes","filteredWarnings"],"sources":["index.ts"],"sourcesContent":["import chalk from 'chalk'\nimport textTable from 'next/dist/compiled/text-table'\nimport createStore from 'next/dist/compiled/unistore'\nimport stripAnsi from 'strip-ansi'\n\nimport formatWebpackMessages from '../../client/dev/error-overlay/format-webpack-messages'\nimport { OutputState, store as consoleStore } from './store'\nimport forkTsCheckerWebpackPlugin from 'fork-ts-checker-webpack-plugin'\nimport { NormalizedMessage } from 'fork-ts-checker-webpack-plugin/lib/NormalizedMessage'\nimport { createCodeframeFormatter } from 'fork-ts-checker-webpack-plugin/lib/formatter/codeframeFormatter'\n\nexport function startedDevelopmentServer(appUrl: string) {\n  consoleStore.setState({ appUrl })\n}\n\nlet previousClient: any = null\nlet previousServer: any = null\n\ntype CompilerDiagnosticsWithFile = {\n  errors: { file: string | undefined; message: string }[] | null\n  warnings: { file: string | undefined; message: string }[] | null\n}\n\ntype CompilerDiagnostics = {\n  errors: string[] | null\n  warnings: string[] | null\n}\n\ntype WebpackStatus =\n  | { loading: true }\n  | ({\n      loading: false\n      typeChecking: boolean\n    } & CompilerDiagnostics)\n\ntype AmpStatus = {\n  message: string\n  line: number\n  col: number\n  specUrl: string | null\n  code: string\n}\n\nexport type AmpPageStatus = {\n  [page: string]: { errors: AmpStatus[]; warnings: AmpStatus[] }\n}\n\ntype BuildStatusStore = {\n  client: WebpackStatus\n  server: WebpackStatus\n  amp: AmpPageStatus\n}\n\nenum WebpackStatusPhase {\n  COMPILING = 1,\n  COMPILED_WITH_ERRORS = 2,\n  TYPE_CHECKING = 3,\n  COMPILED_WITH_WARNINGS = 4,\n  COMPILED = 5,\n}\n\nfunction getWebpackStatusPhase(status: WebpackStatus): WebpackStatusPhase {\n  if (status.loading) {\n    return WebpackStatusPhase.COMPILING\n  }\n  if (status.errors) {\n    return WebpackStatusPhase.COMPILED_WITH_ERRORS\n  }\n  if (status.typeChecking) {\n    return WebpackStatusPhase.TYPE_CHECKING\n  }\n  if (status.warnings) {\n    return WebpackStatusPhase.COMPILED_WITH_WARNINGS\n  }\n  return WebpackStatusPhase.COMPILED\n}\n\nexport function formatAmpMessages(amp: AmpPageStatus) {\n  let output = chalk.bold('Amp Validation') + '\\n\\n'\n  let messages: string[][] = []\n\n  const chalkError = chalk.red('error')\n  function ampError(page: string, error: AmpStatus) {\n    messages.push([page, chalkError, error.message, error.specUrl || ''])\n  }\n\n  const chalkWarn = chalk.yellow('warn')\n  function ampWarn(page: string, warn: AmpStatus) {\n    messages.push([page, chalkWarn, warn.message, warn.specUrl || ''])\n  }\n\n  for (const page in amp) {\n    let { errors, warnings } = amp[page]\n\n    const devOnlyFilter = (err: AmpStatus) => err.code !== 'DEV_MODE_ONLY'\n    errors = errors.filter(devOnlyFilter)\n    warnings = warnings.filter(devOnlyFilter)\n    if (!(errors.length || warnings.length)) {\n      // Skip page with no non-dev warnings\n      continue\n    }\n\n    if (errors.length) {\n      ampError(page, errors[0])\n      for (let index = 1; index < errors.length; ++index) {\n        ampError('', errors[index])\n      }\n    }\n    if (warnings.length) {\n      ampWarn(errors.length ? '' : page, warnings[0])\n      for (let index = 1; index < warnings.length; ++index) {\n        ampWarn('', warnings[index])\n      }\n    }\n    messages.push(['', '', '', ''])\n  }\n\n  if (!messages.length) {\n    return ''\n  }\n\n  output += textTable(messages, {\n    align: ['l', 'l', 'l', 'l'],\n    stringLength(str: string) {\n      return stripAnsi(str).length\n    },\n  })\n\n  return output\n}\n\nconst buildStore = createStore<BuildStatusStore>()\n\nbuildStore.subscribe(state => {\n  const { amp, client, server } = state\n\n  const [{ status }] = [\n    { status: client, phase: getWebpackStatusPhase(client) },\n    { status: server, phase: getWebpackStatusPhase(server) },\n  ].sort((a, b) => a.phase.valueOf() - b.phase.valueOf())\n\n  const { bootstrap: bootstrapping, appUrl } = consoleStore.getState()\n  if (bootstrapping && status.loading) {\n    return\n  }\n\n  let partialState: Partial<OutputState> = {\n    bootstrap: false,\n    appUrl: appUrl!,\n  }\n\n  if (status.loading) {\n    consoleStore.setState(\n      { ...partialState, loading: true } as OutputState,\n      true\n    )\n  } else {\n    let { errors, warnings, typeChecking } = status\n\n    if (errors == null) {\n      if (typeChecking) {\n        consoleStore.setState(\n          {\n            ...partialState,\n            loading: false,\n            typeChecking: true,\n            errors,\n            warnings,\n          } as OutputState,\n          true\n        )\n        return\n      }\n\n      if (Object.keys(amp).length > 0) {\n        warnings = (warnings || []).concat(formatAmpMessages(amp))\n        if (!warnings.length) warnings = null\n      }\n    }\n\n    consoleStore.setState(\n      {\n        ...partialState,\n        loading: false,\n        typeChecking: false,\n        errors,\n        warnings,\n      } as OutputState,\n      true\n    )\n  }\n})\n\nexport function ampValidation(\n  page: string,\n  errors: AmpStatus[],\n  warnings: AmpStatus[]\n) {\n  const { amp } = buildStore.getState()\n  if (!(errors.length || warnings.length)) {\n    buildStore.setState({\n      amp: Object.keys(amp)\n        .filter(k => k !== page)\n        .sort()\n        .reduce((a, c) => ((a[c] = amp[c]), a), {} as any),\n    })\n    return\n  }\n\n  const newAmp: AmpPageStatus = { ...amp, [page]: { errors, warnings } }\n  buildStore.setState({\n    amp: Object.keys(newAmp)\n      .sort()\n      .reduce((a, c) => ((a[c] = newAmp[c]), a), {} as any),\n  })\n}\n\nexport function watchCompilers(\n  client: any,\n  server: any,\n  enableTypeCheckingOnClient: boolean,\n  onTypeChecked: (diagnostics: CompilerDiagnostics) => void\n) {\n  if (previousClient === client && previousServer === server) {\n    return\n  }\n\n  buildStore.setState({\n    client: { loading: true },\n    server: { loading: true },\n  })\n\n  function tapCompiler(\n    key: string,\n    compiler: any,\n    hasTypeChecking: boolean,\n    onEvent: (status: WebpackStatus) => void\n  ) {\n    let tsMessagesPromise: Promise<CompilerDiagnosticsWithFile> | undefined\n    let tsMessagesResolver: (diagnostics: CompilerDiagnosticsWithFile) => void\n\n    compiler.hooks.invalid.tap(`NextJsInvalid-${key}`, () => {\n      tsMessagesPromise = undefined\n      onEvent({ loading: true })\n    })\n\n    if (hasTypeChecking) {\n      const typescriptFormatter = createCodeframeFormatter({})\n\n      compiler.hooks.beforeCompile.tap(`NextJs-${key}-StartTypeCheck`, () => {\n        tsMessagesPromise = new Promise(resolve => {\n          tsMessagesResolver = msgs => resolve(msgs)\n        })\n      })\n\n      forkTsCheckerWebpackPlugin\n        .getCompilerHooks(compiler)\n        .receive.tap(\n          `NextJs-${key}-afterTypeScriptCheck`,\n          (diagnostics: NormalizedMessage[], lints: NormalizedMessage[]) => {\n            const allMsgs = [...diagnostics, ...lints]\n            const format = (message: NormalizedMessage) =>\n              typescriptFormatter(message, true)\n\n            const errors = allMsgs\n              .filter(msg => msg.severity === 'error')\n              .map(d => ({\n                file: (d.file || '').replace(/\\\\/g, '/'),\n                message: format(d),\n              }))\n            const warnings = allMsgs\n              .filter(msg => msg.severity === 'warning')\n              .map(d => ({\n                file: (d.file || '').replace(/\\\\/g, '/'),\n                message: format(d),\n              }))\n\n            tsMessagesResolver({\n              errors: errors.length ? errors : null,\n              warnings: warnings.length ? warnings : null,\n            })\n          }\n        )\n    }\n\n    compiler.hooks.done.tap(`NextJsDone-${key}`, (stats: any) => {\n      buildStore.setState({ amp: {} })\n\n      const { errors, warnings } = formatWebpackMessages(\n        stats.toJson({ all: false, warnings: true, errors: true })\n      )\n\n      const hasErrors = errors && errors.length\n      const hasWarnings = warnings && warnings.length\n\n      onEvent({\n        loading: false,\n        typeChecking: hasTypeChecking,\n        errors: hasErrors ? errors : null,\n        warnings: hasWarnings ? warnings : null,\n      })\n\n      const typePromise = tsMessagesPromise\n\n      if (!hasErrors && typePromise) {\n        typePromise.then(typeMessages => {\n          if (typePromise !== tsMessagesPromise) {\n            // a new compilation started so we don't care about this\n            return\n          }\n\n          const reportFiles = stats.compilation.modules\n            .map((m: any) => (m.resource || '').replace(/\\\\/g, '/'))\n            .filter(Boolean)\n\n          let filteredErrors = typeMessages.errors\n            ? typeMessages.errors\n                .filter(({ file }) => file && reportFiles.includes(file))\n                .map(({ message }) => message)\n            : null\n          if (filteredErrors && filteredErrors.length < 1) {\n            filteredErrors = null\n          }\n          let filteredWarnings = typeMessages.warnings\n            ? typeMessages.warnings\n                .filter(({ file }) => file && reportFiles.includes(file))\n                .map(({ message }) => message)\n            : null\n          if (filteredWarnings && filteredWarnings.length < 1) {\n            filteredWarnings = null\n          }\n\n          stats.compilation.errors.push(...(filteredErrors || []))\n          stats.compilation.warnings.push(...(filteredWarnings || []))\n          onTypeChecked({\n            errors: stats.compilation.errors.length\n              ? stats.compilation.errors\n              : null,\n            warnings: stats.compilation.warnings.length\n              ? stats.compilation.warnings\n              : null,\n          })\n\n          onEvent({\n            loading: false,\n            typeChecking: false,\n            errors: filteredErrors,\n            warnings: hasWarnings\n              ? [...warnings, ...(filteredWarnings || [])]\n              : filteredWarnings,\n          })\n        })\n      }\n    })\n  }\n\n  tapCompiler('client', client, enableTypeCheckingOnClient, status =>\n    buildStore.setState({ client: status })\n  )\n  tapCompiler('server', server, false, status =>\n    buildStore.setState({ server: status })\n  )\n\n  previousClient = client\n  previousServer = server\n}\n"],"mappings":"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","ignoreList":[]}