{"version":3,"names":["_stringHash","_interopRequireDefault","require","_sourceMap","_webpackSources","_webpack","_TaskRunner","_nextPageConfig","e","__esModule","default","warningRegex","JS_REGEX","TerserPlugin","constructor","options","terserOptions","warningsFilter","sourceMap","cache","cpus","distDir","isSourceMap","input","Boolean","version","sources","Array","isArray","mappings","buildSourceMap","inputSourceMap","SourceMapConsumer","buildError","err","file","requestShortener","line","original","originalPositionFor","column","col","source","Error","message","shorten","stack","buildWarning","warning","warningMessage","locationMessage","match","exec","replace","apply","compiler","optimizeFn","compilation","chunks","callback","taskRunner","TaskRunner","processedAssets","WeakSet","tasks","from","reduce","acc","chunk","concat","files","additionalChunkAssets","filter","test","forEach","asset","assets","has","sourceAndMap","map","warnings","push","compress","global_defs","sprStatus","used","task","cacheKey","stringHash","error","errors","RequestShortener","context","run","tasksError","results","data","index","code","length","outputSource","SourceMapSource","JSON","parse","RawSource","add","builtWarning","exit","plugin","name","hooks","tap","buildModule","moduleArg","useSourceMap","mainTemplate","chunkTemplate","template","hashForChunk","hash","update","optimizeChunkAssets","tapAsync","bind","exports"],"sources":["index.js"],"sourcesContent":["/* eslint-disable\n  no-param-reassign\n*/\nimport stringHash from 'string-hash'\nimport { SourceMapConsumer } from 'source-map'\nimport { SourceMapSource, RawSource } from 'webpack-sources'\nimport { RequestShortener } from 'webpack'\nimport TaskRunner from './TaskRunner'\nimport { sprStatus } from '../../../../babel/plugins/next-page-config'\n\nconst warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/\n\nconst JS_REGEX = /\\.m?js$/\n\nexport class TerserPlugin {\n  constructor(options = {}) {\n    const {\n      terserOptions = {},\n      warningsFilter = () => true,\n      sourceMap = false,\n      cache = false,\n      cpus,\n      distDir,\n    } = options\n\n    this.cpus = cpus\n    this.distDir = distDir\n    this.options = {\n      warningsFilter,\n      sourceMap,\n      cache,\n      terserOptions,\n    }\n  }\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(\n      input &&\n        input.version &&\n        input.sources &&\n        Array.isArray(input.sources) &&\n        typeof input.mappings === 'string'\n    )\n  }\n\n  static buildSourceMap(inputSourceMap) {\n    if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n      return null\n    }\n\n    return new SourceMapConsumer(inputSourceMap)\n  }\n\n  static buildError(err, file, sourceMap, requestShortener) {\n    // Handling error which should have line, col, filename and message\n    if (err.line) {\n      const original =\n        sourceMap &&\n        sourceMap.originalPositionFor({\n          line: err.line,\n          column: err.col,\n        })\n\n      if (original && original.source && requestShortener) {\n        return new Error(\n          `${file} from Terser\\n${err.message} [${requestShortener.shorten(\n            original.source\n          )}:${original.line},${original.column}][${file}:${err.line},${\n            err.col\n          }]`\n        )\n      }\n\n      return new Error(\n        `${file} from Terser\\n${err.message} [${file}:${err.line},${err.col}]`\n      )\n    } else if (err.stack) {\n      return new Error(`${file} from Terser\\n${err.stack}`)\n    }\n\n    return new Error(`${file} from Terser\\n${err.message}`)\n  }\n\n  static buildWarning(\n    warning,\n    file,\n    sourceMap,\n    requestShortener,\n    warningsFilter\n  ) {\n    let warningMessage = warning\n    let locationMessage = ''\n    let source = null\n\n    if (sourceMap) {\n      const match = warningRegex.exec(warning)\n\n      if (match) {\n        const line = +match[1]\n        const column = +match[2]\n        const original = sourceMap.originalPositionFor({\n          line,\n          column,\n        })\n\n        if (\n          original &&\n          original.source &&\n          original.source !== file &&\n          requestShortener\n        ) {\n          ;({ source } = original)\n          warningMessage = `${warningMessage.replace(warningRegex, '')}`\n\n          locationMessage = `[${requestShortener.shorten(original.source)}:${\n            original.line\n          },${original.column}]`\n        }\n      }\n    }\n\n    if (warningsFilter && !warningsFilter(warning, source)) {\n      return null\n    }\n\n    return `Terser Plugin: ${warningMessage}${locationMessage}`\n  }\n\n  apply(compiler) {\n    const optimizeFn = (compilation, chunks, callback) => {\n      const taskRunner = new TaskRunner({\n        distDir: this.distDir,\n        cpus: this.cpus,\n        cache: this.options.cache,\n      })\n\n      const processedAssets = new WeakSet()\n      const tasks = []\n\n      Array.from(chunks)\n        .reduce((acc, chunk) => acc.concat(chunk.files || []), [])\n        .concat(compilation.additionalChunkAssets || [])\n        .filter(file => JS_REGEX.test(file))\n        .forEach(file => {\n          let inputSourceMap\n\n          const asset = compilation.assets[file]\n\n          if (processedAssets.has(asset)) {\n            return\n          }\n\n          try {\n            let input\n\n            if (this.options.sourceMap && asset.sourceAndMap) {\n              const { source, map } = asset.sourceAndMap()\n\n              input = source\n\n              if (TerserPlugin.isSourceMap(map)) {\n                inputSourceMap = map\n              } else {\n                inputSourceMap = map\n\n                compilation.warnings.push(\n                  new Error(`${file} contains invalid source map`)\n                )\n              }\n            } else {\n              input = asset.source()\n              inputSourceMap = null\n            }\n\n            // force dead-code elimination for SPR related code if not used\n            const { compress } = this.options.terserOptions\n            if (compress) {\n              if (!compress.global_defs) {\n                compress.global_defs = {}\n              }\n              compress.global_defs['self.__HAS_SPR'] = !!sprStatus.used\n            }\n\n            const task = {\n              file,\n              input,\n              inputSourceMap,\n              terserOptions: this.options.terserOptions,\n            }\n\n            if (this.options.cache) {\n              // increment 'a' to invalidate previous caches from different options\n              task.cacheKey = 'a' + stringHash(input)\n              if (this.options.sourceMap) task.cacheKey += 's'\n            }\n\n            tasks.push(task)\n          } catch (error) {\n            compilation.errors.push(\n              TerserPlugin.buildError(\n                error,\n                file,\n                TerserPlugin.buildSourceMap(inputSourceMap),\n                new RequestShortener(compiler.context)\n              )\n            )\n          }\n        })\n\n      taskRunner.run(tasks, (tasksError, results) => {\n        if (tasksError) {\n          compilation.errors.push(tasksError)\n\n          return\n        }\n\n        results.forEach((data, index) => {\n          const { file, input, inputSourceMap } = tasks[index]\n          const { error, map, code, warnings } = data\n\n          let sourceMap = null\n\n          if (error || (warnings && warnings.length > 0)) {\n            sourceMap = TerserPlugin.buildSourceMap(inputSourceMap)\n          }\n\n          // Handling results\n          // Error case: add errors, and go to next file\n          if (error) {\n            compilation.errors.push(\n              TerserPlugin.buildError(\n                error,\n                file,\n                sourceMap,\n                new RequestShortener(compiler.context)\n              )\n            )\n\n            return\n          }\n\n          let outputSource\n\n          if (map) {\n            outputSource = new SourceMapSource(\n              code,\n              file,\n              JSON.parse(map),\n              input,\n              inputSourceMap\n            )\n          } else {\n            outputSource = new RawSource(code)\n          }\n\n          // Updating assets\n          processedAssets.add((compilation.assets[file] = outputSource))\n\n          // Handling warnings\n          if (warnings && warnings.length > 0) {\n            warnings.forEach(warning => {\n              const builtWarning = TerserPlugin.buildWarning(\n                warning,\n                file,\n                sourceMap,\n                new RequestShortener(compiler.context),\n                this.options.warningsFilter\n              )\n\n              if (builtWarning) {\n                compilation.warnings.push(builtWarning)\n              }\n            })\n          }\n        })\n\n        taskRunner.exit()\n\n        callback()\n      })\n    }\n\n    const plugin = { name: this.constructor.name }\n\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      if (this.options.sourceMap) {\n        compilation.hooks.buildModule.tap(plugin, moduleArg => {\n          // to get detailed location info about errors\n          moduleArg.useSourceMap = true\n        })\n      }\n\n      const { mainTemplate, chunkTemplate } = compilation\n\n      // Regenerate `contenthash` for minified assets\n      for (const template of [mainTemplate, chunkTemplate]) {\n        template.hooks.hashForChunk.tap(plugin, hash => {\n          // Terser version\n          // Has to be updated when options change too\n          hash.update('3.17.0')\n          return hash\n        })\n      }\n\n      compilation.hooks.optimizeChunkAssets.tapAsync(\n        plugin,\n        optimizeFn.bind(this, compilation)\n      )\n    })\n  }\n}\n"],"mappings":"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","ignoreList":[]}