{"version":3,"names":["_cssnanoSimple","require","_webpackSources","CSS_REGEX","CssMinimizerPlugin","constructor","options","apply","compiler","hooks","compilation","tap","optimizeChunkAssets","tapPromise","chunks","Promise","all","reduce","acc","chunk","concat","files","filter","entry","test","map","file","postcssOptions","to","from","asset","assets","input","sourceAndMap","source","prev","minify","then","res","SourceMapSource","css","toJSON","RawSource","exports"],"sources":["css-minimizer-plugin.ts"],"sourcesContent":["import { process as minify } from 'cssnano-simple'\nimport webpack from 'webpack'\nimport { RawSource, SourceMapSource } from 'webpack-sources'\n\n// https://github.com/NMFR/optimize-css-assets-webpack-plugin/blob/0a410a9bf28c7b0e81a3470a13748e68ca2f50aa/src/index.js#L20\nconst CSS_REGEX = /\\.css(\\?.*)?$/i\n\ntype CssMinimizerPluginOptions = {\n  postcssOptions: {\n    map: false | { prev?: string | false; inline: boolean; annotation: boolean }\n  }\n}\n\nexport class CssMinimizerPlugin {\n  private options: CssMinimizerPluginOptions\n\n  constructor(options: CssMinimizerPluginOptions) {\n    this.options = options\n  }\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.compilation.tap('CssMinimizerPlugin', compilation => {\n      compilation.hooks.optimizeChunkAssets.tapPromise(\n        'CssMinimizerPlugin',\n        chunks =>\n          Promise.all(\n            chunks\n              .reduce(\n                (acc, chunk) => acc.concat(chunk.files || []),\n                [] as string[]\n              )\n              .filter(entry => CSS_REGEX.test(entry))\n              .map(file => {\n                const postcssOptions = {\n                  ...this.options.postcssOptions,\n                  to: file,\n                  from: file,\n                }\n\n                const asset = compilation.assets[file]\n\n                let input: string\n                if (postcssOptions.map && asset.sourceAndMap) {\n                  const { source, map } = asset.sourceAndMap()\n                  input = source\n                  postcssOptions.map.prev = map ? map : false\n                } else {\n                  input = asset.source()\n                }\n\n                return minify(input, postcssOptions).then(res => {\n                  if (res.map) {\n                    compilation.assets[file] = new SourceMapSource(\n                      res.css,\n                      file,\n                      res.map.toJSON()\n                    )\n                  } else {\n                    compilation.assets[file] = new RawSource(res.css)\n                  }\n                })\n              })\n          )\n      )\n    })\n  }\n}\n"],"mappings":"uEAAA,IAAAA,cAAA,CAAAC,OAAA,mBAEA,IAAAC,eAAA,CAAAD,OAAA,oBAEA;AACA,KAAM,CAAAE,SAAS,CAAG,gBAAgB,CAQ3B,KAAM,CAAAC,kBAAmB,CAG9BC,WAAWA,CAACC,OAAkC,CAAE,MAFxCA,OAAO,QAGb,IAAI,CAACA,OAAO,CAAGA,OAAO,CACxB,CAEAC,KAAKA,CAACC,QAA0B,CAAE,CAChCA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,oBAAoB,CAAED,WAAW,EAAI,CAClEA,WAAW,CAACD,KAAK,CAACG,mBAAmB,CAACC,UAAU,CAC9C,oBAAoB,CACpBC,MAAM,EACJC,OAAO,CAACC,GAAG,CACTF,MAAM,CACHG,MAAM,CACL,CAACC,GAAG,CAAEC,KAAK,GAAKD,GAAG,CAACE,MAAM,CAACD,KAAK,CAACE,KAAK,EAAI,EAAE,CAAC,CAC7C,EACF,CAAC,CACAC,MAAM,CAACC,KAAK,EAAIpB,SAAS,CAACqB,IAAI,CAACD,KAAK,CAAC,CAAC,CACtCE,GAAG,CAACC,IAAI,EAAI,CACX,KAAM,CAAAC,cAAc,CAAG,CACrB,GAAG,IAAI,CAACrB,OAAO,CAACqB,cAAc,CAC9BC,EAAE,CAAEF,IAAI,CACRG,IAAI,CAAEH,IACR,CAAC,CAED,KAAM,CAAAI,KAAK,CAAGpB,WAAW,CAACqB,MAAM,CAACL,IAAI,CAAC,CAEtC,GAAI,CAAAM,KAAa,CACjB,GAAIL,cAAc,CAACF,GAAG,EAAIK,KAAK,CAACG,YAAY,CAAE,CAC5C,KAAM,CAAEC,MAAM,CAAET,GAAI,CAAC,CAAGK,KAAK,CAACG,YAAY,CAAC,CAAC,CAC5CD,KAAK,CAAGE,MAAM,CACdP,cAAc,CAACF,GAAG,CAACU,IAAI,CAAGV,GAAG,CAAGA,GAAG,CAAG,KAAK,CAC7C,CAAC,IAAM,CACLO,KAAK,CAAGF,KAAK,CAACI,MAAM,CAAC,CAAC,CACxB,CAEA,MAAO,GAAAE,sBAAM,EAACJ,KAAK,CAAEL,cAAc,CAAC,CAACU,IAAI,CAACC,GAAG,EAAI,CAC/C,GAAIA,GAAG,CAACb,GAAG,CAAE,CACXf,WAAW,CAACqB,MAAM,CAACL,IAAI,CAAC,CAAG,GAAI,CAAAa,+BAAe,CAC5CD,GAAG,CAACE,GAAG,CACPd,IAAI,CACJY,GAAG,CAACb,GAAG,CAACgB,MAAM,CAAC,CACjB,CAAC,CACH,CAAC,IAAM,CACL/B,WAAW,CAACqB,MAAM,CAACL,IAAI,CAAC,CAAG,GAAI,CAAAgB,yBAAS,CAACJ,GAAG,CAACE,GAAG,CAAC,CACnD,CACF,CAAC,CAAC,CACJ,CAAC,CACL,CACJ,CAAC,CACH,CAAC,CAAC,CACJ,CACF,CAACG,OAAA,CAAAvC,kBAAA,CAAAA,kBAAA","ignoreList":[]}