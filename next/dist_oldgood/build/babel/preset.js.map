{"version":3,"names":["env","process","NODE_ENV","isProduction","isDevelopment","isTest","styledJsxOptions","options","Array","isArray","plugins","map","plugin","name","require","resolve","supportsStaticESM","caller","module","exports","api","supportsESM","isServer","isModern","isLaxModern","targets","esmodules","presetEnvConfig","modules","exclude","node","customModernPreset","sourceType","presets","default","development","pragma","importAs","property","lib","useBuiltIns","corejs","helpers","regenerator","useESModules","absoluteRuntime","versions","pnp","__dirname","undefined","removeImport","filter","Boolean"],"sources":["preset.ts"],"sourcesContent":["import { PluginItem } from '@babel/core'\nconst env = process.env.NODE_ENV\nconst isProduction = env === 'production'\nconst isDevelopment = env === 'development'\nconst isTest = env === 'test'\n\ntype StyledJsxPlugin = [string, any] | string\ntype StyledJsxBabelOptions =\n  | {\n      plugins?: StyledJsxPlugin[]\n      'babel-test'?: boolean\n    }\n  | undefined\n\n// Resolve styled-jsx plugins\nfunction styledJsxOptions(options: StyledJsxBabelOptions) {\n  if (!options) {\n    return {}\n  }\n\n  if (!Array.isArray(options.plugins)) {\n    return options\n  }\n\n  options.plugins = options.plugins.map(\n    (plugin: StyledJsxPlugin): StyledJsxPlugin => {\n      if (Array.isArray(plugin)) {\n        const [name, options] = plugin\n        return [require.resolve(name), options]\n      }\n\n      return require.resolve(plugin)\n    }\n  )\n\n  return options\n}\n\ntype NextBabelPresetOptions = {\n  'preset-env'?: any\n  'preset-react'?: any\n  'class-properties'?: any\n  'transform-runtime'?: any\n  'experimental-modern-preset'?: PluginItem\n  'styled-jsx'?: StyledJsxBabelOptions\n}\n\ntype BabelPreset = {\n  presets?: PluginItem[] | null\n  plugins?: PluginItem[] | null\n  sourceType?: 'script' | 'module' | 'unambiguous'\n  overrides?: any[]\n}\n\n// Taken from https://github.com/babel/babel/commit/d60c5e1736543a6eac4b549553e107a9ba967051#diff-b4beead8ad9195361b4537601cc22532R158\nfunction supportsStaticESM(caller: any) {\n  return !!(caller && caller.supportsStaticESM)\n}\n\nmodule.exports = (\n  api: any,\n  options: NextBabelPresetOptions = {}\n): BabelPreset => {\n  const supportsESM = api.caller(supportsStaticESM)\n  const isServer = api.caller((caller: any) => !!caller && caller.isServer)\n  const isModern = api.caller((caller: any) => !!caller && caller.isModern)\n  const isLaxModern =\n    isModern ||\n    (options['preset-env'] &&\n      options['preset-env'].targets &&\n      options['preset-env'].targets.esmodules === true)\n\n  const presetEnvConfig = {\n    // In the test environment `modules` is often needed to be set to true, babel figures that out by itself using the `'auto'` option\n    // In production/development this option is set to `false` so that webpack can handle import/export with tree-shaking\n    modules: 'auto',\n    exclude: ['transform-typeof-symbol'],\n    ...options['preset-env'],\n  }\n\n  // When transpiling for the server or tests, target the current Node version\n  // if not explicitly specified:\n  if (\n    (isServer || isTest) &&\n    (!presetEnvConfig.targets ||\n      !(\n        typeof presetEnvConfig.targets === 'object' &&\n        'node' in presetEnvConfig.targets\n      ))\n  ) {\n    presetEnvConfig.targets = {\n      // Targets the current process' version of Node. This requires apps be\n      // built and deployed on the same version of Node.\n      node: 'current',\n    }\n  }\n\n  // spefify a preset to use instead of @babel/preset-env:\n  const customModernPreset =\n    isLaxModern && options['experimental-modern-preset']\n\n  return {\n    sourceType: 'unambiguous',\n    presets: [\n      customModernPreset || [\n        require('@babel/preset-env').default,\n        presetEnvConfig,\n      ],\n      [\n        require('@babel/preset-react'),\n        {\n          // This adds @babel/plugin-transform-react-jsx-source and\n          // @babel/plugin-transform-react-jsx-self automatically in development\n          development: isDevelopment || isTest,\n          pragma: '__jsx',\n          ...options['preset-react'],\n        },\n      ],\n      require('@babel/preset-typescript'),\n    ],\n    plugins: [\n      [\n        require('./plugins/jsx-pragma'),\n        {\n          // This produces the following injected import for modules containing JSX:\n          //   import React from 'react';\n          //   var __jsx = React.createElement;\n          module: 'react',\n          importAs: 'React',\n          pragma: '__jsx',\n          property: 'createElement',\n        },\n      ],\n      [\n        require('./plugins/optimize-hook-destructuring'),\n        {\n          // only optimize hook functions imported from React/Preact\n          lib: true,\n        },\n      ],\n      require('@babel/plugin-syntax-dynamic-import'),\n      require('./plugins/react-loadable-plugin'),\n      [\n        require('@babel/plugin-proposal-class-properties'),\n        options['class-properties'] || {},\n      ],\n      [\n        require('@babel/plugin-proposal-object-rest-spread'),\n        {\n          useBuiltIns: true,\n        },\n      ],\n      [\n        require('@babel/plugin-transform-runtime'),\n        {\n          corejs: 2,\n          helpers: true,\n          regenerator: true,\n          useESModules: supportsESM && presetEnvConfig.modules !== 'commonjs',\n          absoluteRuntime: (process.versions as any).pnp\n            ? __dirname\n            : undefined,\n          ...options['transform-runtime'],\n        },\n      ],\n      [\n        isTest && options['styled-jsx'] && options['styled-jsx']['babel-test']\n          ? require('styled-jsx/babel-test')\n          : require('styled-jsx/babel'),\n        styledJsxOptions(options['styled-jsx']),\n      ],\n      require('./plugins/amp-attributes'),\n      isProduction && [\n        require('babel-plugin-transform-react-remove-prop-types'),\n        {\n          removeImport: true,\n        },\n      ],\n    ].filter(Boolean),\n  }\n}\n"],"mappings":"aACA,KAAM,CAAAA,GAAG,CAAGC,OAAO,CAACD,GAAG,CAACE,QAAQ,CAChC,KAAM,CAAAC,YAAY,CAAGH,GAAG,GAAK,YAAY,CACzC,KAAM,CAAAI,aAAa,CAAGJ,GAAG,GAAK,aAAa,CAC3C,KAAM,CAAAK,MAAM,CAAGL,GAAG,GAAK,MAAM,CAU7B;AACA,QAAS,CAAAM,gBAAgBA,CAACC,OAA8B,CAAE,CACxD,GAAI,CAACA,OAAO,CAAE,CACZ,MAAO,CAAC,CAAC,CACX,CAEA,GAAI,CAACC,KAAK,CAACC,OAAO,CAACF,OAAO,CAACG,OAAO,CAAC,CAAE,CACnC,MAAO,CAAAH,OAAO,CAChB,CAEAA,OAAO,CAACG,OAAO,CAAGH,OAAO,CAACG,OAAO,CAACC,GAAG,CAClCC,MAAuB,EAAsB,CAC5C,GAAIJ,KAAK,CAACC,OAAO,CAACG,MAAM,CAAC,CAAE,CACzB,KAAM,CAACC,IAAI,CAAEN,OAAO,CAAC,CAAGK,MAAM,CAC9B,MAAO,CAACE,OAAO,CAACC,OAAO,CAACF,IAAI,CAAC,CAAEN,OAAO,CAAC,CACzC,CAEA,MAAO,CAAAO,OAAO,CAACC,OAAO,CAACH,MAAM,CAAC,CAChC,CACF,CAAC,CAED,MAAO,CAAAL,OAAO,CAChB,CAkBA;AACA,QAAS,CAAAS,iBAAiBA,CAACC,MAAW,CAAE,CACtC,MAAO,CAAC,EAAEA,MAAM,EAAIA,MAAM,CAACD,iBAAiB,CAAC,CAC/C,CAEAE,MAAM,CAACC,OAAO,CAAG,CACfC,GAAQ,CACRb,OAA+B,CAAG,CAAC,CAAC,GACpB,CAChB,KAAM,CAAAc,WAAW,CAAGD,GAAG,CAACH,MAAM,CAACD,iBAAiB,CAAC,CACjD,KAAM,CAAAM,QAAQ,CAAGF,GAAG,CAACH,MAAM,CAAEA,MAAW,EAAK,CAAC,CAACA,MAAM,EAAIA,MAAM,CAACK,QAAQ,CAAC,CACzE,KAAM,CAAAC,QAAQ,CAAGH,GAAG,CAACH,MAAM,CAAEA,MAAW,EAAK,CAAC,CAACA,MAAM,EAAIA,MAAM,CAACM,QAAQ,CAAC,CACzE,KAAM,CAAAC,WAAW,CACfD,QAAQ,EACPhB,OAAO,CAAC,YAAY,CAAC,EACpBA,OAAO,CAAC,YAAY,CAAC,CAACkB,OAAO,EAC7BlB,OAAO,CAAC,YAAY,CAAC,CAACkB,OAAO,CAACC,SAAS,GAAK,IAAK,CAErD,KAAM,CAAAC,eAAe,CAAG,CACtB;AACA;AACAC,OAAO,CAAE,MAAM,CACfC,OAAO,CAAE,CAAC,yBAAyB,CAAC,CACpC,GAAGtB,OAAO,CAAC,YAAY,CACzB,CAAC,CAED;AACA;AACA,GACE,CAACe,QAAQ,EAAIjB,MAAM,IAClB,CAACsB,eAAe,CAACF,OAAO,EACvB,EACE,MAAO,CAAAE,eAAe,CAACF,OAAO,GAAK,QAAQ,EAC3C,MAAM,EAAI,CAAAE,eAAe,CAACF,OAAO,CAClC,CAAC,CACJ,CACAE,eAAe,CAACF,OAAO,CAAG,CACxB;AACA;AACAK,IAAI,CAAE,SACR,CAAC,CACH,CAEA;AACA,KAAM,CAAAC,kBAAkB,CACtBP,WAAW,EAAIjB,OAAO,CAAC,4BAA4B,CAAC,CAEtD,MAAO,CACLyB,UAAU,CAAE,aAAa,CACzBC,OAAO,CAAE,CACPF,kBAAkB,EAAI,CACpBjB,OAAO,CAAC,mBAAmB,CAAC,CAACoB,OAAO,CACpCP,eAAe,CAChB,CACD,CACEb,OAAO,CAAC,qBAAqB,CAAC,CAC9B,CACE;AACA;AACAqB,WAAW,CAAE/B,aAAa,EAAIC,MAAM,CACpC+B,MAAM,CAAE,OAAO,CACf,GAAG7B,OAAO,CAAC,cAAc,CAC3B,CAAC,CACF,CACDO,OAAO,CAAC,0BAA0B,CAAC,CACpC,CACDJ,OAAO,CAAE,CACP,CACEI,OAAO,CAAC,sBAAsB,CAAC,CAC/B,CACE;AACA;AACA;AACAI,MAAM,CAAE,OAAO,CACfmB,QAAQ,CAAE,OAAO,CACjBD,MAAM,CAAE,OAAO,CACfE,QAAQ,CAAE,eACZ,CAAC,CACF,CACD,CACExB,OAAO,CAAC,uCAAuC,CAAC,CAChD,CACE;AACAyB,GAAG,CAAE,IACP,CAAC,CACF,CACDzB,OAAO,CAAC,qCAAqC,CAAC,CAC9CA,OAAO,CAAC,iCAAiC,CAAC,CAC1C,CACEA,OAAO,CAAC,yCAAyC,CAAC,CAClDP,OAAO,CAAC,kBAAkB,CAAC,EAAI,CAAC,CAAC,CAClC,CACD,CACEO,OAAO,CAAC,2CAA2C,CAAC,CACpD,CACE0B,WAAW,CAAE,IACf,CAAC,CACF,CACD,CACE1B,OAAO,CAAC,iCAAiC,CAAC,CAC1C,CACE2B,MAAM,CAAE,CAAC,CACTC,OAAO,CAAE,IAAI,CACbC,WAAW,CAAE,IAAI,CACjBC,YAAY,CAAEvB,WAAW,EAAIM,eAAe,CAACC,OAAO,GAAK,UAAU,CACnEiB,eAAe,CAAG5C,OAAO,CAAC6C,QAAQ,CAASC,GAAG,CAC1CC,SAAS,CACTC,SAAS,CACb,GAAG1C,OAAO,CAAC,mBAAmB,CAChC,CAAC,CACF,CACD,CACEF,MAAM,EAAIE,OAAO,CAAC,YAAY,CAAC,EAAIA,OAAO,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,CAClEO,OAAO,CAAC,uBAAuB,CAAC,CAChCA,OAAO,CAAC,kBAAkB,CAAC,CAC/BR,gBAAgB,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CACxC,CACDO,OAAO,CAAC,0BAA0B,CAAC,CACnCX,YAAY,EAAI,CACdW,OAAO,CAAC,gDAAgD,CAAC,CACzD,CACEoC,YAAY,CAAE,IAChB,CAAC,CACF,CACF,CAACC,MAAM,CAACC,OAAO,CAClB,CAAC,CACH,CAAC","ignoreList":[]}