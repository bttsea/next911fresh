{"version":3,"names":["_default","types","t","visitor","ImportDeclaration","path","state","source","node","value","createHookSpecifier","get","find","specifier","isImportSpecifier","imported","name","bindingName","local","binding","scope","getBinding","referencePaths","forEach","refPath","callExpression","parentPath","isCallExpression","args","buildCodeFrameError","arguments","push","objectExpression","properties","objectProperty","identifier","stringLiteral","opts","key"],"sources":["next-data.ts"],"sourcesContent":["import { PluginObj } from '@babel/core'\nimport { NodePath } from '@babel/traverse'\nimport * as BabelTypes from '@babel/types'\n\nexport default function({\n  types: t,\n}: {\n  types: typeof BabelTypes\n}): PluginObj<any> {\n  return {\n    visitor: {\n      ImportDeclaration(path: NodePath<BabelTypes.ImportDeclaration>, state) {\n        const source = path.node.source.value\n        if (source !== 'next/data') return\n\n        const createHookSpecifier = path.get('specifiers').find(specifier => {\n          return (\n            specifier.isImportSpecifier() &&\n            specifier.node.imported.name === 'createHook'\n          )\n        })\n\n        if (!createHookSpecifier) return\n\n        const bindingName = createHookSpecifier.node.local.name\n        const binding = path.scope.getBinding(bindingName)\n\n        if (!binding) {\n          return\n        }\n\n        binding.referencePaths.forEach(refPath => {\n          let callExpression = refPath.parentPath\n\n          if (!callExpression.isCallExpression()) return\n\n          let args: any = callExpression.get('arguments')\n\n          if (!args[0]) {\n            throw callExpression.buildCodeFrameError(\n              'first argument to createHook should be a function'\n            )\n          }\n\n          if (!args[1]) {\n            callExpression.node.arguments.push(t.objectExpression([]))\n          }\n\n          args = callExpression.get('arguments')\n\n          args[1].node.properties.push(\n            t.objectProperty(\n              t.identifier('key'),\n              t.stringLiteral(state.opts.key)\n            )\n          )\n        })\n      },\n    },\n  }\n}\n"],"mappings":"8DAIe,SAAAA,SAAS,CACtBC,KAAK,CAAEC,CAGT,CAAC,CAAkB,CACjB,MAAO,CACLC,OAAO,CAAE,CACPC,iBAAiBA,CAACC,IAA4C,CAAEC,KAAK,CAAE,CACrE,KAAM,CAAAC,MAAM,CAAGF,IAAI,CAACG,IAAI,CAACD,MAAM,CAACE,KAAK,CACrC,GAAIF,MAAM,GAAK,WAAW,CAAE,OAE5B,KAAM,CAAAG,mBAAmB,CAAGL,IAAI,CAACM,GAAG,CAAC,YAAY,CAAC,CAACC,IAAI,CAACC,SAAS,EAAI,CACnE,MACE,CAAAA,SAAS,CAACC,iBAAiB,CAAC,CAAC,EAC7BD,SAAS,CAACL,IAAI,CAACO,QAAQ,CAACC,IAAI,GAAK,YAAY,CAEjD,CAAC,CAAC,CAEF,GAAI,CAACN,mBAAmB,CAAE,OAE1B,KAAM,CAAAO,WAAW,CAAGP,mBAAmB,CAACF,IAAI,CAACU,KAAK,CAACF,IAAI,CACvD,KAAM,CAAAG,OAAO,CAAGd,IAAI,CAACe,KAAK,CAACC,UAAU,CAACJ,WAAW,CAAC,CAElD,GAAI,CAACE,OAAO,CAAE,CACZ,OACF,CAEAA,OAAO,CAACG,cAAc,CAACC,OAAO,CAACC,OAAO,EAAI,CACxC,GAAI,CAAAC,cAAc,CAAGD,OAAO,CAACE,UAAU,CAEvC,GAAI,CAACD,cAAc,CAACE,gBAAgB,CAAC,CAAC,CAAE,OAExC,GAAI,CAAAC,IAAS,CAAGH,cAAc,CAACd,GAAG,CAAC,WAAW,CAAC,CAE/C,GAAI,CAACiB,IAAI,CAAC,CAAC,CAAC,CAAE,CACZ,KAAM,CAAAH,cAAc,CAACI,mBAAmB,CACtC,mDACF,CAAC,CACH,CAEA,GAAI,CAACD,IAAI,CAAC,CAAC,CAAC,CAAE,CACZH,cAAc,CAACjB,IAAI,CAACsB,SAAS,CAACC,IAAI,CAAC7B,CAAC,CAAC8B,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAC5D,CAEAJ,IAAI,CAAGH,cAAc,CAACd,GAAG,CAAC,WAAW,CAAC,CAEtCiB,IAAI,CAAC,CAAC,CAAC,CAACpB,IAAI,CAACyB,UAAU,CAACF,IAAI,CAC1B7B,CAAC,CAACgC,cAAc,CACdhC,CAAC,CAACiC,UAAU,CAAC,KAAK,CAAC,CACnBjC,CAAC,CAACkC,aAAa,CAAC9B,KAAK,CAAC+B,IAAI,CAACC,GAAG,CAChC,CACF,CAAC,CACH,CAAC,CAAC,CACJ,CACF,CACF,CAAC,CACH","ignoreList":[]}