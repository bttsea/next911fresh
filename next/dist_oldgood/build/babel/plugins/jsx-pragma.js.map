{"version":3,"names":["_default","types","t","inherits","require","visitor","JSXElement","path","state","set","JSXFragment","Program","exit","get","pragma","identifier","opts","importAs","existingBinding","reuseImport","scope","getBinding","property","generateUidIdentifier","mapping","variableDeclaration","variableDeclarator","memberExpression","isVariableDeclarator","node","isCallExpression","init","isIdentifier","callee","name","parentPath","insertAfter","unshiftContainer","importSpecifier","importDeclaration","import","importNamespace","importNamespaceSpecifier","importDefaultSpecifier","stringLiteral","module"],"sources":["jsx-pragma.ts"],"sourcesContent":["import { PluginObj } from '@babel/core'\nimport { NodePath } from '@babel/traverse'\nimport * as BabelTypes from '@babel/types'\n\nexport default function({\n  types: t,\n}: {\n  types: typeof BabelTypes\n}): PluginObj<any> {\n  return {\n    inherits: require('babel-plugin-syntax-jsx'),\n    visitor: {\n      JSXElement(path, state) {\n        state.set('jsx', true)\n      },\n\n      // Fragment syntax is still JSX since it compiles to createElement(),\n      // but JSXFragment is not a JSXElement\n      JSXFragment(path, state) {\n        state.set('jsx', true)\n      },\n\n      Program: {\n        exit(path: NodePath<BabelTypes.Program>, state) {\n          if (state.get('jsx')) {\n            const pragma = t.identifier(state.opts.pragma)\n            let importAs = pragma\n\n            // if there's already a React in scope, use that instead of adding an import\n            const existingBinding =\n              state.opts.reuseImport !== false &&\n              state.opts.importAs &&\n              path.scope.getBinding(state.opts.importAs)\n\n            // var _jsx = _pragma.createElement;\n            if (state.opts.property) {\n              if (state.opts.importAs) {\n                importAs = t.identifier(state.opts.importAs)\n              } else {\n                importAs = path.scope.generateUidIdentifier('pragma')\n              }\n\n              const mapping = t.variableDeclaration('var', [\n                t.variableDeclarator(\n                  pragma,\n                  t.memberExpression(\n                    importAs,\n                    t.identifier(state.opts.property)\n                  )\n                ),\n              ])\n\n              // if the React binding came from a require('react'),\n              // make sure that our usage comes after it.\n              if (\n                existingBinding &&\n                t.isVariableDeclarator(existingBinding.path.node) &&\n                t.isCallExpression(existingBinding.path.node.init) &&\n                t.isIdentifier(existingBinding.path.node.init.callee) &&\n                existingBinding.path.node.init.callee.name === 'require'\n              ) {\n                existingBinding.path.parentPath.insertAfter(mapping)\n              } else {\n                // @ts-ignore\n                path.unshiftContainer('body', mapping)\n              }\n            }\n\n            if (!existingBinding) {\n              const importSpecifier = t.importDeclaration(\n                [\n                  state.opts.import\n                    ? // import { $import as _pragma } from '$module'\n                      t.importSpecifier(\n                        importAs,\n                        t.identifier(state.opts.import)\n                      )\n                    : state.opts.importNamespace\n                    ? t.importNamespaceSpecifier(importAs)\n                    : // import _pragma from '$module'\n                      t.importDefaultSpecifier(importAs),\n                ],\n                t.stringLiteral(state.opts.module || 'react')\n              )\n\n              // @ts-ignore\n              path.unshiftContainer('body', importSpecifier)\n            }\n          }\n        },\n      },\n    },\n  }\n}\n"],"mappings":"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","ignoreList":[]}