{"version":3,"names":["globalInvokeCache","Map","withCoalescedInvoke","func","key","args","entry","get","then","res","isOrigin","value","__wrapper","apply","undefined","future","delete","catch","err","Promise","reject","set"],"sources":["coalesced-function.ts"],"sourcesContent":["type CoalescedInvoke<T> = {\n  isOrigin: boolean\n  value: T\n}\n\ntype UnwrapPromise<T> = T extends Promise<infer U> ? U : T\n\nconst globalInvokeCache = new Map<string, Promise<CoalescedInvoke<unknown>>>()\n\nexport function withCoalescedInvoke<F extends (...args: any) => any>(\n  func: F\n): (\n  key: string,\n  args: Parameters<F>\n) => Promise<CoalescedInvoke<UnwrapPromise<ReturnType<F>>>> {\n  return async function(key: string, args: Parameters<F>) {\n    const entry = globalInvokeCache.get(key)\n    if (entry) {\n      return entry.then(res => ({\n        isOrigin: false,\n        value: res.value as UnwrapPromise<ReturnType<F>>,\n      }))\n    }\n\n    async function __wrapper() {\n      return await func.apply(undefined, args)\n    }\n\n    const future = __wrapper()\n      .then(res => {\n        globalInvokeCache.delete(key)\n        return { isOrigin: true, value: res as UnwrapPromise<ReturnType<F>> }\n      })\n      .catch(err => {\n        globalInvokeCache.delete(key)\n        return Promise.reject(err)\n      })\n    globalInvokeCache.set(key, future)\n    return future\n  }\n}\n"],"mappings":"qFAOA,KAAM,CAAAA,iBAAiB,CAAG,GAAI,CAAAC,GAAG,CAA4C,CAAC,CAEvE,QAAS,CAAAC,mBAAmBA,CACjCC,IAAO,CAImD,CAC1D,MAAO,gBAAeC,GAAW,CAAEC,IAAmB,CAAE,CACtD,KAAM,CAAAC,KAAK,CAAGN,iBAAiB,CAACO,GAAG,CAACH,GAAG,CAAC,CACxC,GAAIE,KAAK,CAAE,CACT,MAAO,CAAAA,KAAK,CAACE,IAAI,CAACC,GAAG,GAAK,CACxBC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAEF,GAAG,CAACE,KACb,CAAC,CAAC,CAAC,CACL,CAEA,cAAe,CAAAC,SAASA,CAAA,CAAG,CACzB,MAAO,MAAM,CAAAT,IAAI,CAACU,KAAK,CAACC,SAAS,CAAET,IAAI,CAAC,CAC1C,CAEA,KAAM,CAAAU,MAAM,CAAGH,SAAS,CAAC,CAAC,CACvBJ,IAAI,CAACC,GAAG,EAAI,CACXT,iBAAiB,CAACgB,MAAM,CAACZ,GAAG,CAAC,CAC7B,MAAO,CAAEM,QAAQ,CAAE,IAAI,CAAEC,KAAK,CAAEF,GAAoC,CAAC,CACvE,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,EAAI,CACZlB,iBAAiB,CAACgB,MAAM,CAACZ,GAAG,CAAC,CAC7B,MAAO,CAAAe,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC,CAC5B,CAAC,CAAC,CACJlB,iBAAiB,CAACqB,GAAG,CAACjB,GAAG,CAAEW,MAAM,CAAC,CAClC,MAAO,CAAAA,MAAM,CACf,CAAC,CACH","ignoreList":[]}