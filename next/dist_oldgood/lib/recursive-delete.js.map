{"version":3,"names":["_fs","_interopRequireDefault","require","_path","_util","e","__esModule","default","readdir","promisify","fs","stat","rmdir","unlink","sleep","setTimeout","unlinkFile","p","t","code","recursiveDelete","dir","filter","previousPath","ensure","result","Promise","all","map","part","absolutePath","join","pathStat","catch","isDirectory","pp","test"],"sources":["recursive-delete.ts"],"sourcesContent":["import fs from 'fs'\nimport { join } from 'path'\nimport { promisify } from 'util'\n\nconst readdir = promisify(fs.readdir)\nconst stat = promisify(fs.stat)\nconst rmdir = promisify(fs.rmdir)\nconst unlink = promisify(fs.unlink)\nconst sleep = promisify(setTimeout)\n\nconst unlinkFile = async (p: string, t = 1): Promise<void> => {\n  try {\n    await unlink(p)\n  } catch (e) {\n    if (\n      (e.code === 'EBUSY' ||\n        e.code === 'ENOTEMPTY' ||\n        e.code === 'EPERM' ||\n        e.code === 'EMFILE') &&\n      t < 3\n    ) {\n      await sleep(t * 100)\n      return unlinkFile(p, t++)\n    }\n\n    if (e.code === 'ENOENT') {\n      return\n    }\n\n    throw e\n  }\n}\n\n/**\n * Recursively delete directory contents\n * @param  {string} dir Directory to delete the contents of\n * @param  {RegExp} [filter] Filter for the relative file path\n * @param  {boolean} [ensure] Ensures that parameter dir exists, this is not passed recursively\n * @param  {string} [previousPath] Ensures that parameter dir exists, this is not passed recursively\n * @returns Promise void\n */\nexport async function recursiveDelete(\n  dir: string,\n  filter?: RegExp,\n  previousPath: string = '',\n  ensure?: boolean\n): Promise<void> {\n  let result\n  try {\n    result = await readdir(dir)\n  } catch (e) {\n    if (e.code === 'ENOENT' && !ensure) {\n      return\n    }\n    throw e\n  }\n\n  await Promise.all(\n    result.map(async (part: string) => {\n      const absolutePath = join(dir, part)\n      const pathStat = await stat(absolutePath).catch(e => {\n        if (e.code !== 'ENOENT') throw e\n      })\n      if (!pathStat) {\n        return\n      }\n\n      if (pathStat.isDirectory()) {\n        const pp = join(previousPath, part)\n        await recursiveDelete(absolutePath, filter, pp)\n\n        if (!filter || filter.test(pp)) {\n          return rmdir(absolutePath)\n        }\n        return\n      }\n\n      if (!filter || filter.test(join(previousPath, part))) {\n        return unlinkFile(absolutePath)\n      }\n    })\n  )\n}\n"],"mappings":"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","ignoreList":[]}