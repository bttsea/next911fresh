{"version":3,"names":["_chalk","_interopRequireDefault","require","_fs","_os","_path","_util","_fileExists","_recursiveReaddir","_resolveRequest","e","__esModule","default","_interopRequireWildcard","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","writeFile","promisify","fs","readFile","writeJson","fileName","object","JSON","stringify","replace","os","EOL","hasTypeScript","dir","typescriptFiles","recursiveReadDir","length","checkDependencies","isYarn","requiredPackages","file","pkg","resolutions","Map","missingPackages","filter","p","resolveRequest","_","packagesHuman","map","index","join","packagesCli","console","error","chalk","bold","red","cyan","process","exit","verifyTypeScriptSetup","pagesDir","tsConfigPath","path","yarnLockFile","hasTsConfig","fileExists","firstTimeSetup","tsConfig","then","val","trim","hasTypeScriptFiles","tsPath","ts","Promise","resolve","compilerOptions","target","parsedValue","ScriptTarget","ES5","suggested","lib","allowJs","skipLibCheck","strict","forceConsistentCasingInFileNames","noEmit","esModuleInterop","value","reason","module","ModuleKind","ESNext","moduleResolution","ModuleResolutionKind","NodeJs","resolveJsonModule","isolatedModules","jsx","JsxEmit","Preserve","formatDiagnosticHost","getCanonicalFileName","getCurrentDirectory","sys","getNewLine","log","yellow","messages","appTsConfig","parsedTsConfig","parsedCompilerOptions","config","readTsConfig","readConfigFile","Error","formatDiagnostic","parse","result","parseJsonConfigFileContent","dirname","errors","code","options","name","info","message","option","keys","valueToCheck","undefined","coloredOption","push","exclude","include","warn","forEach","appTypeDeclarations","existsSync","writeFileSync"],"sources":["verifyTypeScriptSetup.ts"],"sourcesContent":["import chalk from 'chalk'\nimport fs from 'fs'\nimport os from 'os'\nimport path from 'path'\nimport { promisify } from 'util'\n\nimport { fileExists } from './file-exists'\nimport { recursiveReadDir } from './recursive-readdir'\nimport { resolveRequest } from './resolve-request'\n\nconst writeFile = promisify(fs.writeFile)\nconst readFile = promisify(fs.readFile)\n\nfunction writeJson(fileName: string, object: object): Promise<void> {\n  return writeFile(\n    fileName,\n    JSON.stringify(object, null, 2).replace(/\\n/g, os.EOL) + os.EOL\n  )\n}\n\nasync function hasTypeScript(dir: string): Promise<boolean> {\n  const typescriptFiles = await recursiveReadDir(\n    dir,\n    /.*\\.(ts|tsx)$/,\n    /(node_modules|.*\\.d\\.ts)/\n  )\n\n  return typescriptFiles.length > 0\n}\n\nasync function checkDependencies({\n  dir,\n  isYarn,\n}: {\n  dir: string\n  isYarn: boolean\n}) {\n  const requiredPackages = [\n    { file: 'typescript', pkg: 'typescript' },\n    { file: '@types/react/index.d.ts', pkg: '@types/react' },\n    { file: '@types/node/index.d.ts', pkg: '@types/node' },\n  ]\n\n  let resolutions = new Map<string, string>()\n\n  const missingPackages = requiredPackages.filter(p => {\n    try {\n      resolutions.set(p.pkg, resolveRequest(p.file, `${dir}/`))\n    } catch (_) {\n      return true\n    }\n  })\n\n  if (missingPackages.length < 1) {\n    return resolutions.get('typescript')!\n  }\n\n  const packagesHuman = missingPackages\n    .map(\n      (p, index, { length }) =>\n        (index > 0\n          ? index === length - 1\n            ? length > 2\n              ? ', and '\n              : ' and '\n            : ', '\n          : '') + p.pkg\n    )\n    .join('')\n  const packagesCli = missingPackages.map(p => p.pkg).join(' ')\n\n  console.error(\n    chalk.bold.red(\n      `It looks like you're trying to use TypeScript but do not have the required package(s) installed.`\n    )\n  )\n  console.error()\n  console.error(\n    chalk.bold(`Please install ${chalk.bold(packagesHuman)} by running:`)\n  )\n  console.error()\n  console.error(\n    `\\t${chalk.bold.cyan(\n      (isYarn ? 'yarn add --dev' : 'npm install --save-dev') + ' ' + packagesCli\n    )}`\n  )\n  console.error()\n  console.error(\n    chalk.bold(\n      'If you are not trying to use TypeScript, please remove the ' +\n        chalk.cyan('tsconfig.json') +\n        ' file from your package root (and any TypeScript files).'\n    )\n  )\n  console.error()\n  process.exit(1)\n}\n\nexport async function verifyTypeScriptSetup(\n  dir: string,\n  pagesDir: string\n): Promise<void> {\n  const tsConfigPath = path.join(dir, 'tsconfig.json')\n  const yarnLockFile = path.join(dir, 'yarn.lock')\n\n  const hasTsConfig = await fileExists(tsConfigPath)\n  const isYarn = await fileExists(yarnLockFile)\n\n  let firstTimeSetup = false\n  if (hasTsConfig) {\n    const tsConfig = await readFile(tsConfigPath, 'utf8').then(val =>\n      val.trim()\n    )\n    firstTimeSetup = tsConfig === '' || tsConfig === '{}'\n  } else {\n    const hasTypeScriptFiles = await hasTypeScript(pagesDir)\n    if (hasTypeScriptFiles) {\n      firstTimeSetup = true\n    } else {\n      return\n    }\n  }\n\n  const tsPath = await checkDependencies({ dir, isYarn })\n  // @ts-ignore\n  const ts = (await import(tsPath)) as typeof import('typescript')\n\n  const compilerOptions: any = {\n    // These are suggested values and will be set when not present in the\n    // tsconfig.json\n    // 'parsedValue' matches the output value from ts.parseJsonConfigFileContent()\n    target: {\n      parsedValue: ts.ScriptTarget.ES5,\n      suggested: 'es5',\n    },\n    lib: { suggested: ['dom', 'dom.iterable', 'esnext'] },\n    allowJs: { suggested: true },\n    skipLibCheck: { suggested: true },\n    strict: { suggested: false },\n    forceConsistentCasingInFileNames: { suggested: true },\n    noEmit: { suggested: true },\n\n    // These values are required and cannot be changed by the user\n    // Keep this in sync with the webpack config\n    esModuleInterop: {\n      value: true,\n      reason: 'requirement for babel',\n    },\n    module: {\n      parsedValue: ts.ModuleKind.ESNext,\n      value: 'esnext',\n      reason: 'for dynamic import() support',\n    },\n    moduleResolution: {\n      parsedValue: ts.ModuleResolutionKind.NodeJs,\n      value: 'node',\n      reason: 'to match webpack resolution',\n    },\n    resolveJsonModule: { value: true },\n    isolatedModules: {\n      value: true,\n      reason: 'requirement for babel',\n    },\n    jsx: { parsedValue: ts.JsxEmit.Preserve, value: 'preserve' },\n  }\n\n  const formatDiagnosticHost = {\n    getCanonicalFileName: (fileName: string) => fileName,\n    getCurrentDirectory: ts.sys.getCurrentDirectory,\n    getNewLine: () => os.EOL,\n  }\n\n  if (firstTimeSetup) {\n    console.log(\n      chalk.yellow(\n        `We detected TypeScript in your project and created a ${chalk.bold(\n          'tsconfig.json'\n        )} file for you.`\n      )\n    )\n    console.log()\n\n    await writeJson(tsConfigPath, {})\n  }\n\n  const messages = []\n  let appTsConfig\n  let parsedTsConfig\n  let parsedCompilerOptions\n  try {\n    const { config: readTsConfig, error } = ts.readConfigFile(\n      tsConfigPath,\n      ts.sys.readFile\n    )\n\n    if (error) {\n      throw new Error(ts.formatDiagnostic(error, formatDiagnosticHost))\n    }\n\n    appTsConfig = readTsConfig\n\n    // Get TS to parse and resolve any \"extends\"\n    // Calling this function also mutates the tsconfig, adding in \"include\" and\n    // \"exclude\", but the compilerOptions remain untouched\n    parsedTsConfig = JSON.parse(JSON.stringify(readTsConfig))\n    const result = ts.parseJsonConfigFileContent(\n      parsedTsConfig,\n      ts.sys,\n      path.dirname(tsConfigPath)\n    )\n\n    if (result.errors) {\n      result.errors = result.errors.filter(\n        ({ code }) =>\n          // No inputs were found in config file\n          code !== 18003\n      )\n    }\n\n    if (result.errors && result.errors.length) {\n      throw new Error(\n        ts.formatDiagnostic(result.errors[0], formatDiagnosticHost)\n      )\n    }\n\n    parsedCompilerOptions = result.options\n  } catch (e) {\n    if (e && e.name === 'SyntaxError') {\n      console.error(\n        chalk.red.bold(\n          'Could not parse',\n          chalk.cyan('tsconfig.json') + '.',\n          'Please make sure it contains syntactically correct JSON.'\n        )\n      )\n    }\n\n    console.info(e && e.message ? `${e.message}` : '')\n    process.exit(1)\n    return\n  }\n\n  if (appTsConfig.compilerOptions == null) {\n    appTsConfig.compilerOptions = {}\n    firstTimeSetup = true\n  }\n\n  for (const option of Object.keys(compilerOptions)) {\n    const { parsedValue, value, suggested, reason } = compilerOptions[option]\n\n    const valueToCheck = parsedValue === undefined ? value : parsedValue\n    const coloredOption = chalk.cyan('compilerOptions.' + option)\n\n    if (suggested != null) {\n      if (parsedCompilerOptions[option] === undefined) {\n        appTsConfig.compilerOptions[option] = suggested\n        messages.push(\n          `${coloredOption} to be ${chalk.bold(\n            'suggested'\n          )} value: ${chalk.cyan.bold(suggested)} (this can be changed)`\n        )\n      }\n    } else if (parsedCompilerOptions[option] !== valueToCheck) {\n      appTsConfig.compilerOptions[option] = value\n      messages.push(\n        `${coloredOption} ${chalk.bold(\n          valueToCheck == null ? 'must not' : 'must'\n        )} be ${valueToCheck == null ? 'set' : chalk.cyan.bold(value)}` +\n          (reason != null ? ` (${reason})` : '')\n      )\n    }\n  }\n\n  // tsconfig will have the merged \"include\" and \"exclude\" by this point\n  if (parsedTsConfig.exclude == null) {\n    appTsConfig.exclude = ['node_modules']\n  }\n\n  if (parsedTsConfig.include == null) {\n    appTsConfig.include = ['next-env.d.ts', '**/*.ts', '**/*.tsx']\n  }\n\n  if (messages.length > 0) {\n    if (firstTimeSetup) {\n      console.info(\n        chalk.bold(\n          'Your',\n          chalk.cyan('tsconfig.json'),\n          'has been populated with default values.'\n        )\n      )\n      console.info()\n    } else {\n      console.warn(\n        chalk.bold(\n          'The following changes are being made to your',\n          chalk.cyan('tsconfig.json'),\n          'file:'\n        )\n      )\n      messages.forEach(message => {\n        console.warn('  - ' + message)\n      })\n      console.warn()\n    }\n    await writeJson(tsConfigPath, appTsConfig)\n  }\n\n  // Reference `next` types\n  const appTypeDeclarations = path.join(dir, 'next-env.d.ts')\n  if (!fs.existsSync(appTypeDeclarations)) {\n    fs.writeFileSync(\n      appTypeDeclarations,\n      '/// <reference types=\"next\" />' +\n        os.EOL +\n        '/// <reference types=\"next/types/global\" />' +\n        os.EOL\n    )\n  }\n}\n"],"mappings":"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","ignoreList":[]}