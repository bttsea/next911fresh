{"version":3,"names":["exports","__esModule","nextExport","_path","require","_fs","_index","_interopRequireDefault","_export","_utils","e","default","argv","args","arg","Boolean","String","Number","console","log","process","exit","dir","resolve","_","existsSync","printAndExit","options","silent","threads","concurrency","outdir","join","exportApp","then","catch","err"],"sources":["next-export.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { resolve, join } from 'path'\nimport { existsSync } from 'fs'\nimport arg from 'next/dist/compiled/arg/index.js'\nimport exportApp from '../export'\nimport { printAndExit } from '../server/lib/utils'\nimport { cliCommand } from '../bin/next'\n\nconst nextExport: cliCommand = argv => {\n  const args = arg(\n    {\n      // Types\n      '--help': Boolean,\n      '--silent': Boolean,\n      '--outdir': String,\n      '--threads': Number,\n      '--concurrency': Number,\n\n      // Aliases\n      '-h': '--help',\n      '-s': '--silent',\n      '-o': '--outdir',\n    },\n    { argv }\n  )\n\n  if (args['--help']) {\n    // tslint:disable-next-line\n    console.log(`\n      Description\n        Exports the application for production deployment\n\n      Usage\n        $ next export [options] <dir>\n\n      <dir> represents where the compiled dist folder should go.\n      If no directory is provided, the 'out' folder will be created in the current directory.\n\n      Options\n        -h - list this help\n        -o - set the output dir (defaults to 'out')\n        -s - do not print any messages to console\n    `)\n    process.exit(0)\n  }\n\n  const dir = resolve(args._[0] || '.')\n\n  // Check if pages dir exists and warn if not\n  if (!existsSync(dir)) {\n    printAndExit(`> No such directory exists as the project root: ${dir}`)\n  }\n\n  const options = {\n    silent: args['--silent'] || false,\n    threads: args['--threads'],\n    concurrency: args['--concurrency'],\n    outdir: args['--outdir'] ? resolve(args['--outdir']) : join(dir, 'out'),\n  }\n\n  exportApp(dir, options)\n    .then(() => {\n      printAndExit('Export successful', 0)\n    })\n    .catch(err => {\n      printAndExit(err)\n    })\n}\n\nexport { nextExport }\n"],"mappings":"AAAA;AAAmB,aAAAA,OAAA,CAAAC,UAAA,MAAAD,OAAA,CAAAE,UAAA,QACnB,IAAAC,KAAA,CAAAC,OAAA,SACA,IAAAC,GAAA,CAAAD,OAAA,OACA,IAAAE,MAAA,CAAAC,sBAAA,CAAAH,OAAA,qCACA,IAAAI,OAAA,CAAAD,sBAAA,CAAAH,OAAA,eACA,IAAAK,MAAA,CAAAL,OAAA,wBAAkD,SAAAG,uBAAAG,CAAA,SAAAA,CAAA,EAAAA,CAAA,CAAAT,UAAA,CAAAS,CAAA,EAAAC,OAAA,CAAAD,CAAA,GAGlD,KAAM,CAAAR,UAAsB,CAAGU,IAAI,EAAI,CACrC,KAAM,CAAAC,IAAI,CAAG,GAAAC,cAAG,EACd,CACE;AACA,QAAQ,CAAEC,OAAO,CACjB,UAAU,CAAEA,OAAO,CACnB,UAAU,CAAEC,MAAM,CAClB,WAAW,CAAEC,MAAM,CACnB,eAAe,CAAEA,MAAM,CAEvB;AACA,IAAI,CAAE,QAAQ,CACd,IAAI,CAAE,UAAU,CAChB,IAAI,CAAE,UACR,CAAC,CACD,CAAEL,IAAK,CACT,CAAC,CAED,GAAIC,IAAI,CAAC,QAAQ,CAAC,CAAE,CAClB;AACAK,OAAO,CAACC,GAAG,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,CACFC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CACjB,CAEA,KAAM,CAAAC,GAAG,CAAG,GAAAC,aAAO,EAACV,IAAI,CAACW,CAAC,CAAC,CAAC,CAAC,EAAI,GAAG,CAAC,CAErC;AACA,GAAI,CAAC,GAAAC,cAAU,EAACH,GAAG,CAAC,CAAE,CACpB,GAAAI,mBAAY,EAAC,mDAAmDJ,GAAG,EAAE,CAAC,CACxE,CAEA,KAAM,CAAAK,OAAO,CAAG,CACdC,MAAM,CAAEf,IAAI,CAAC,UAAU,CAAC,EAAI,KAAK,CACjCgB,OAAO,CAAEhB,IAAI,CAAC,WAAW,CAAC,CAC1BiB,WAAW,CAAEjB,IAAI,CAAC,eAAe,CAAC,CAClCkB,MAAM,CAAElB,IAAI,CAAC,UAAU,CAAC,CAAG,GAAAU,aAAO,EAACV,IAAI,CAAC,UAAU,CAAC,CAAC,CAAG,GAAAmB,UAAI,EAACV,GAAG,CAAE,KAAK,CACxE,CAAC,CAED,GAAAW,eAAS,EAACX,GAAG,CAAEK,OAAO,CAAC,CACpBO,IAAI,CAAC,IAAM,CACV,GAAAR,mBAAY,EAAC,mBAAmB,CAAE,CAAC,CAAC,CACtC,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,EAAI,CACZ,GAAAV,mBAAY,EAACU,GAAG,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAApC,OAAA,CAAAE,UAAA,CAAAA,UAAA","ignoreList":[]}