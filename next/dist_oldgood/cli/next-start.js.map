{"version":3,"names":["exports","__esModule","nextStart","_path","require","_index","_interopRequireDefault","_startServer","e","default","argv","args","arg","Boolean","Number","String","console","log","process","exit","dir","resolve","_","port","startServer","then","app","prepare","catch","err","error"],"sources":["next-start.ts"],"sourcesContent":["#!/usr/bin/env node\n\nimport { resolve } from 'path'\nimport arg from 'next/dist/compiled/arg/index.js'\nimport startServer from '../server/lib/start-server'\nimport { cliCommand } from '../bin/next'\n\nconst nextStart: cliCommand = argv => {\n  const args = arg(\n    {\n      // Types\n      '--help': Boolean,\n      '--port': Number,\n      '--hostname': String,\n\n      // Aliases\n      '-h': '--help',\n      '-p': '--port',\n      '-H': '--hostname',\n    },\n    { argv }\n  )\n\n  if (args['--help']) {\n    // tslint:disable-next-line\n    console.log(`\n      Description\n        Starts the application in production mode.\n        The application should be compiled with \\`next build\\` first.\n\n      Usage\n        $ next start <dir> -p <port>\n\n      <dir> is the directory that contains the compiled dist folder\n      created by running \\`next build\\`.\n      If no directory is provided, the current directory will be assumed.\n      You can set a custom dist folder in config https://github.com/zeit/next.js#custom-configuration\n\n      Options\n        --port, -p      A port number on which to start the application\n        --hostname, -H  Hostname on which to start the application\n        --help, -h      Displays this message\n    `)\n    process.exit(0)\n  }\n\n  const dir = resolve(args._[0] || '.')\n  const port = args['--port'] || 3000\n  startServer({ dir }, port, args['--hostname'])\n    .then(async app => {\n      // tslint:disable-next-line\n      console.log(\n        `> Ready on http://${args['--hostname'] || 'localhost'}:${port}`\n      )\n      await app.prepare()\n    })\n    .catch(err => {\n      // tslint:disable-next-line\n      console.error(err)\n      process.exit(1)\n    })\n}\n\nexport { nextStart }\n"],"mappings":"AAAA;AAAmB,aAAAA,OAAA,CAAAC,UAAA,MAAAD,OAAA,CAAAE,SAAA,QAEnB,IAAAC,KAAA,CAAAC,OAAA,SACA,IAAAC,MAAA,CAAAC,sBAAA,CAAAF,OAAA,qCACA,IAAAG,YAAA,CAAAD,sBAAA,CAAAF,OAAA,gCAAoD,SAAAE,uBAAAE,CAAA,SAAAA,CAAA,EAAAA,CAAA,CAAAP,UAAA,CAAAO,CAAA,EAAAC,OAAA,CAAAD,CAAA,GAGpD,KAAM,CAAAN,SAAqB,CAAGQ,IAAI,EAAI,CACpC,KAAM,CAAAC,IAAI,CAAG,GAAAC,cAAG,EACd,CACE;AACA,QAAQ,CAAEC,OAAO,CACjB,QAAQ,CAAEC,MAAM,CAChB,YAAY,CAAEC,MAAM,CAEpB;AACA,IAAI,CAAE,QAAQ,CACd,IAAI,CAAE,QAAQ,CACd,IAAI,CAAE,YACR,CAAC,CACD,CAAEL,IAAK,CACT,CAAC,CAED,GAAIC,IAAI,CAAC,QAAQ,CAAC,CAAE,CAClB;AACAK,OAAO,CAACC,GAAG,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,CACFC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CACjB,CAEA,KAAM,CAAAC,GAAG,CAAG,GAAAC,aAAO,EAACV,IAAI,CAACW,CAAC,CAAC,CAAC,CAAC,EAAI,GAAG,CAAC,CACrC,KAAM,CAAAC,IAAI,CAAGZ,IAAI,CAAC,QAAQ,CAAC,EAAI,IAAI,CACnC,GAAAa,oBAAW,EAAC,CAAEJ,GAAI,CAAC,CAAEG,IAAI,CAAEZ,IAAI,CAAC,YAAY,CAAC,CAAC,CAC3Cc,IAAI,CAAC,KAAM,CAAAC,GAAG,EAAI,CACjB;AACAV,OAAO,CAACC,GAAG,CACT,qBAAqBN,IAAI,CAAC,YAAY,CAAC,EAAI,WAAW,IAAIY,IAAI,EAChE,CAAC,CACD,KAAM,CAAAG,GAAG,CAACC,OAAO,CAAC,CAAC,CACrB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,EAAI,CACZ;AACAb,OAAO,CAACc,KAAK,CAACD,GAAG,CAAC,CAClBX,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CACjB,CAAC,CAAC,CACN,CAAC,CAAAnB,OAAA,CAAAE,SAAA,CAAAA,SAAA","ignoreList":[]}