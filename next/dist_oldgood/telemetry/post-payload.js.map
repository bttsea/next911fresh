{"version":3,"names":["_asyncRetry","_interopRequireDefault","require","_nodeFetch","e","__esModule","default","_postPayload","endpoint","body","retry","fetch","method","JSON","stringify","headers","timeout","then","res","ok","err","Error","statusText","response","minTimeout","retries","factor","catch"],"sources":["post-payload.ts"],"sourcesContent":["import retry from 'async-retry'\nimport fetch from 'node-fetch'\n\nexport function _postPayload(endpoint: string, body: object) {\n  return (\n    retry(\n      () =>\n        fetch(endpoint, {\n          method: 'POST',\n          body: JSON.stringify(body),\n          headers: { 'content-type': 'application/json' },\n          timeout: 5000,\n        }).then(res => {\n          if (!res.ok) {\n            const err = new Error(res.statusText)\n            ;(err as any).response = res\n            throw err\n          }\n        }),\n      { minTimeout: 500, retries: 1, factor: 1 }\n    )\n      .catch(() => {\n        // We swallow errors when telemetry cannot be sent\n      })\n      // Ensure promise is voided\n      .then(() => {}, () => {})\n  )\n}\n"],"mappings":"uEAAA,IAAAA,WAAA,CAAAC,sBAAA,CAAAC,OAAA,iBACA,IAAAC,UAAA,CAAAF,sBAAA,CAAAC,OAAA,gBAA8B,SAAAD,uBAAAG,CAAA,SAAAA,CAAA,EAAAA,CAAA,CAAAC,UAAA,CAAAD,CAAA,EAAAE,OAAA,CAAAF,CAAA,GAEvB,QAAS,CAAAG,YAAYA,CAACC,QAAgB,CAAEC,IAAY,CAAE,CAC3D,MACE,GAAAC,mBAAK,EACH,IACE,GAAAC,kBAAK,EAACH,QAAQ,CAAE,CACdI,MAAM,CAAE,MAAM,CACdH,IAAI,CAAEI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAC1BM,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,OAAO,CAAE,IACX,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,EAAI,CACb,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,CACX,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,KAAK,CAACH,GAAG,CAACI,UAAU,CAAC,CACnCF,GAAG,CAASG,QAAQ,CAAGL,GAAG,CAC5B,KAAM,CAAAE,GAAG,CACX,CACF,CAAC,CAAC,CACJ,CAAEI,UAAU,CAAE,GAAG,CAAEC,OAAO,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAE,CAC3C,CAAC,CACEC,KAAK,CAAC,IAAM,CACX;AAAA,CACD,CACD;AAAA,CACCV,IAAI,CAAC,IAAM,CAAC,CAAC,CAAE,IAAM,CAAC,CAAC,CAAC,CAE/B","ignoreList":[]}