{"version":3,"names":["_storage","require","EVENT_VERSION","recordVersion","event","process","env","__NEXT_VERSION","Promise","resolve","record","eventName","payload","nextVersion","nodeVersion","version","cliCommand"],"sources":["version.ts"],"sourcesContent":["import { record } from '../storage'\n\nconst EVENT_VERSION = 'NEXT_CLI_SESSION_STARTED'\n\ntype EventCliSessionStarted = {\n  nextVersion: string\n  nodeVersion: string\n  cliCommand: string\n}\n\nexport function recordVersion(\n  event: Omit<EventCliSessionStarted, 'nextVersion' | 'nodeVersion'>\n) {\n  // This should be an invariant, if it fails our build tooling is broken.\n  if (typeof process.env.__NEXT_VERSION !== 'string') {\n    return Promise.resolve()\n  }\n\n  return record({\n    eventName: EVENT_VERSION,\n    payload: {\n      nextVersion: process.env.__NEXT_VERSION,\n      nodeVersion: process.version,\n      cliCommand: event.cliCommand,\n    } as EventCliSessionStarted,\n  })\n}\n"],"mappings":"yEAAA,IAAAA,QAAA,CAAAC,OAAA,eAEA,KAAM,CAAAC,aAAa,CAAG,0BAA0B,CAQzC,QAAS,CAAAC,aAAaA,CAC3BC,KAAkE,CAClE,CACA;AACA,GAAI,MAAO,CAAAC,OAAO,CAACC,GAAG,CAACC,cAAc,GAAK,QAAQ,CAAE,CAClD,MAAO,CAAAC,OAAO,CAACC,OAAO,CAAC,CAAC,CAC1B,CAEA,MAAO,GAAAC,eAAM,EAAC,CACZC,SAAS,CAAET,aAAa,CACxBU,OAAO,CAAE,CACPC,WAAW,CAAER,OAAO,CAACC,GAAG,CAACC,cAAc,CACvCO,WAAW,CAAET,OAAO,CAACU,OAAO,CAC5BC,UAAU,CAAEZ,KAAK,CAACY,UACpB,CACF,CAAC,CAAC,CACJ","ignoreList":[]}