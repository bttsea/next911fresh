{"version":3,"names":["_chalk","_interopRequireDefault","require","_conf","_crypto","_isDocker","_path","_anonymousMeta","ciEnvironment","_interopRequireWildcard","_postPayload2","_projectId","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","distDir","config","projectId","randomRunId","TELEMETRY_KEY_ENABLED","TELEMETRY_KEY_NOTIFY_DATE","TELEMETRY_KEY_ID","TELEMETRY_KEY_SALT","NEXT_TELEMETRY_DISABLED","NEXT_TELEMETRY_DEBUG","process","env","isDisabled","notify","Date","now","toString","console","log","chalk","magenta","bold","cyan","setup","cwd","isCI","isDockerFunction","path","join","undefined","Conf","projectName","anonymousId","randomBytes","getProjectId","setDistDir","_distDir","computeHash","payload","salt","hash","createHash","update","digest","setTelemetryEnabled","_enabled","enabled","isTelemetryEnabled","_record","_events","events","Array","isArray","length","Promise","resolve","forEach","eventName","error","JSON","stringify","context","sessionId","meta","getAnonymousMeta","_postPayload","map","fields","record","wrapper","then","value","isFulfilled","isRejected","catch","reason"],"sources":["storage.ts"],"sourcesContent":["import chalk from 'chalk'\nimport Conf from 'conf'\nimport { BinaryLike, createHash, randomBytes } from 'crypto'\nimport isDockerFunction from 'is-docker'\nimport path from 'path'\n\nimport { getAnonymousMeta } from './anonymous-meta'\nimport * as ciEnvironment from './ci-info'\nimport { _postPayload } from './post-payload'\nimport { getProjectId } from './project-id'\n\nlet distDir: string | undefined\n\nlet config: Conf<any> | undefined\nlet projectId: string | undefined\nlet randomRunId: string | undefined\n\n// This is the key that stores whether or not telemetry is enabled or disabled.\nconst TELEMETRY_KEY_ENABLED = 'telemetry.enabled'\n\n// This is the key that specifies when the user was informed about anonymous\n// telemetry collection.\nconst TELEMETRY_KEY_NOTIFY_DATE = 'telemetry.notifiedAt'\n\n// This is a quasi-persistent identifier used to dedupe recurring events. It's\n// generated from random data and completely anonymous.\nconst TELEMETRY_KEY_ID = `telemetry.anonymousId`\n\n// This is the cryptographic salt that is included within every hashed value.\n// This salt value is never sent to us, ensuring privacy and the one-way nature\n// of the hash (prevents dictionary lookups of pre-computed hashes).\n// See the `computeHash` function.\nconst TELEMETRY_KEY_SALT = `telemetry.salt`\n\nconst { NEXT_TELEMETRY_DISABLED, NEXT_TELEMETRY_DEBUG } = process.env\n\nlet isDisabled: boolean = !!NEXT_TELEMETRY_DISABLED\n\nfunction notify() {\n  // No notification needed if telemetry is not enabled\n  if (!config || isDisabled) {\n    return\n  }\n\n  // The end-user has already been notified about our telemetry integration. We\n  // don't need to constantly annoy them about it.\n  // We will re-inform users about the telemetry if significant changes are\n  // ever made.\n  if (config.get(TELEMETRY_KEY_NOTIFY_DATE, '')) {\n    return\n  }\n\n  config.set(TELEMETRY_KEY_NOTIFY_DATE, Date.now().toString())\n\n  console.log(\n    `${chalk.magenta.bold(\n      'Attention'\n    )}: Next.js now collects completely anonymous telemetry regarding usage.`\n  )\n  console.log(\n    `This information is used to shape Next.js' roadmap and prioritize features.`\n  )\n  console.log(\n    `You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:`\n  )\n  console.log(chalk.cyan('https://nextjs.org/telemetry'))\n  console.log()\n}\n\nfunction setup() {\n  if (config) {\n    return\n  }\n\n  const cwd =\n    (ciEnvironment.isCI || isDockerFunction()) && distDir\n      ? path.join(distDir, 'cache')\n      : undefined\n\n  config = new Conf({ projectName: 'nextjs', cwd })\n\n  let anonymousId = config.get(TELEMETRY_KEY_ID)\n  if (!anonymousId) {\n    config.set(\n      TELEMETRY_KEY_ID,\n      (anonymousId = randomBytes(32).toString('hex'))\n    )\n  }\n\n  if (!config.get(TELEMETRY_KEY_SALT)) {\n    config.set(TELEMETRY_KEY_SALT, randomBytes(16).toString('hex'))\n  }\n\n  projectId = getProjectId()\n  randomRunId = randomBytes(8).toString('hex')\n\n  if (config.get(TELEMETRY_KEY_ENABLED, true) === false) {\n    isDisabled = true\n  }\n\n  notify()\n}\n\nexport function setDistDir(_distDir: string) {\n  distDir = _distDir\n}\n\nexport function computeHash(payload: BinaryLike): string | null {\n  setup()\n\n  const salt = config!.get(TELEMETRY_KEY_SALT)\n  if (!salt) {\n    return null\n  }\n\n  const hash = createHash('sha256')\n\n  // Always prepend the payload value with salt. This ensures the hash is truly\n  // one-way.\n  hash.update(salt)\n\n  // Update is an append operation, not a replacement. The salt from the prior\n  // update is still present!\n  hash.update(payload)\n  return hash.digest('hex')\n}\n\nexport function setTelemetryEnabled(_enabled: boolean) {\n  setup()\n\n  const enabled = !!_enabled\n  config!.set(TELEMETRY_KEY_ENABLED, enabled)\n  isDisabled = !enabled\n}\n\nexport function isTelemetryEnabled(): boolean {\n  setup()\n\n  return config!.get(TELEMETRY_KEY_ENABLED, true) !== false\n}\n\ntype TelemetryEvent = { eventName: string; payload: object }\ntype EventContext = {\n  anonymousId: string\n  projectId: string\n  sessionId: string\n}\ntype EventMeta = { [key: string]: unknown }\ntype EventBatchShape = {\n  eventName: string\n  fields: object\n}\nfunction _record(_events: TelemetryEvent | TelemetryEvent[]): Promise<any> {\n  let events: TelemetryEvent[]\n  if (Array.isArray(_events)) {\n    events = _events\n  } else {\n    events = [_events]\n  }\n\n  if (events.length < 1) {\n    return Promise.resolve()\n  }\n\n  setup()\n\n  if (NEXT_TELEMETRY_DEBUG) {\n    // Print to standard error to simplify selecting the output\n    events.forEach(({ eventName, payload }) =>\n      console.error(\n        `[telemetry] ` + JSON.stringify({ eventName, payload }, null, 2)\n      )\n    )\n    // Do not send the telemetry data if debugging. Users may use this feature\n    // to preview what data would be sent.\n    return Promise.resolve()\n  }\n\n  // Skip recording telemetry if the feature is disabled\n  if (isDisabled) {\n    return Promise.resolve()\n  }\n\n  const anonymousId = config!.get(TELEMETRY_KEY_ID)\n  if (!anonymousId) {\n    return Promise.resolve()\n  }\n\n  const context: EventContext = {\n    anonymousId: anonymousId,\n    projectId: projectId!,\n    sessionId: randomRunId!,\n  }\n  const meta: EventMeta = getAnonymousMeta()\n  return _postPayload(`https://telemetry.nextjs.org/api/v1/record`, {\n    context,\n    meta,\n    events: events.map(({ eventName, payload }) => ({\n      eventName,\n      fields: payload,\n    })) as Array<EventBatchShape>,\n  })\n}\n\nexport function record(\n  _events: TelemetryEvent | TelemetryEvent[]\n): Promise<{\n  isFulfilled: boolean\n  isRejected: boolean\n  value?: any\n  reason?: any\n}> {\n  // pseudo try-catch\n  async function wrapper() {\n    return await _record(_events)\n  }\n\n  return wrapper()\n    .then(value => ({\n      isFulfilled: true,\n      isRejected: false,\n      value,\n    }))\n    .catch(reason => ({\n      isFulfilled: false,\n      isRejected: true,\n      reason,\n    }))\n}\n"],"mappings":"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","ignoreList":[]}