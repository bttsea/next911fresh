{"version":3,"names":["_isDocker","_interopRequireDefault","require","_os","ciEnvironment","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","traits","getAnonymousMeta","cpus","os","NOW_REGION","process","env","systemPlatform","platform","systemRelease","release","systemArchitecture","arch","cpuCount","length","cpuModel","model","cpuSpeed","speed","memoryInMb","Math","trunc","totalmem","pow","isDocker","isDockerFunction","isNowDev","isCI","ciName","name"],"sources":["anonymous-meta.ts"],"sourcesContent":["import isDockerFunction from 'is-docker'\nimport os from 'os'\n\nimport * as ciEnvironment from './ci-info'\n\ntype AnonymousMeta = {\n  systemPlatform: NodeJS.Platform\n  systemRelease: string\n  systemArchitecture: string\n  cpuCount: number\n  cpuModel: string | null\n  cpuSpeed: number | null\n  memoryInMb: number\n  isDocker: boolean\n  isNowDev: boolean\n  isCI: boolean\n  ciName: string | null\n}\n\nlet traits: AnonymousMeta | undefined\n\nexport function getAnonymousMeta(): AnonymousMeta {\n  if (traits) {\n    return traits\n  }\n\n  const cpus = os.cpus() || []\n  const { NOW_REGION } = process.env\n  traits = {\n    // Software information\n    systemPlatform: os.platform(),\n    systemRelease: os.release(),\n    systemArchitecture: os.arch(),\n    // Machine information\n    cpuCount: cpus.length,\n    cpuModel: cpus.length ? cpus[0].model : null,\n    cpuSpeed: cpus.length ? cpus[0].speed : null,\n    memoryInMb: Math.trunc(os.totalmem() / Math.pow(1024, 2)),\n    // Environment information\n    isDocker: isDockerFunction(),\n    isNowDev: NOW_REGION === 'dev1',\n    isCI: ciEnvironment.isCI,\n    ciName: (ciEnvironment.isCI && ciEnvironment.name) || null,\n  }\n\n  return traits\n}\n"],"mappings":"+EAAA,IAAAA,SAAA,CAAAC,sBAAA,CAAAC,OAAA,eACA,IAAAC,GAAA,CAAAF,sBAAA,CAAAC,OAAA,QAEA,IAAAE,aAAA,CAAAC,uBAAA,CAAAH,OAAA,eAA0C,SAAAG,wBAAAC,CAAA,CAAAC,CAAA,wBAAAC,OAAA,KAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAH,uBAAA,SAAAA,CAAAC,CAAA,CAAAC,CAAA,MAAAA,CAAA,EAAAD,CAAA,EAAAA,CAAA,CAAAK,UAAA,QAAAL,CAAA,KAAAM,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAAAC,SAAA,MAAAC,OAAA,CAAAV,CAAA,YAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAQ,CAAA,IAAAF,CAAA,CAAAL,CAAA,CAAAG,CAAA,CAAAD,CAAA,KAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,SAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,EAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,CAAAQ,CAAA,aAAAP,CAAA,IAAAD,CAAA,aAAAC,CAAA,KAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,CAAAC,CAAA,KAAAM,CAAA,EAAAD,CAAA,CAAAU,MAAA,CAAAC,cAAA,GAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,CAAAC,CAAA,KAAAM,CAAA,CAAAK,GAAA,EAAAL,CAAA,CAAAM,GAAA,EAAAP,CAAA,CAAAE,CAAA,CAAAP,CAAA,CAAAM,CAAA,EAAAC,CAAA,CAAAP,CAAA,EAAAD,CAAA,CAAAC,CAAA,UAAAO,CAAA,IAAAR,CAAA,CAAAC,CAAA,YAAAN,uBAAAK,CAAA,SAAAA,CAAA,EAAAA,CAAA,CAAAK,UAAA,CAAAL,CAAA,EAAAU,OAAA,CAAAV,CAAA,GAgB1C,GAAI,CAAAmB,MAAiC,CAE9B,QAAS,CAAAC,gBAAgBA,CAAA,CAAkB,CAChD,GAAID,MAAM,CAAE,CACV,MAAO,CAAAA,MAAM,CACf,CAEA,KAAM,CAAAE,IAAI,CAAGC,WAAE,CAACD,IAAI,CAAC,CAAC,EAAI,EAAE,CAC5B,KAAM,CAAEE,UAAW,CAAC,CAAGC,OAAO,CAACC,GAAG,CAClCN,MAAM,CAAG,CACP;AACAO,cAAc,CAAEJ,WAAE,CAACK,QAAQ,CAAC,CAAC,CAC7BC,aAAa,CAAEN,WAAE,CAACO,OAAO,CAAC,CAAC,CAC3BC,kBAAkB,CAAER,WAAE,CAACS,IAAI,CAAC,CAAC,CAC7B;AACAC,QAAQ,CAAEX,IAAI,CAACY,MAAM,CACrBC,QAAQ,CAAEb,IAAI,CAACY,MAAM,CAAGZ,IAAI,CAAC,CAAC,CAAC,CAACc,KAAK,CAAG,IAAI,CAC5CC,QAAQ,CAAEf,IAAI,CAACY,MAAM,CAAGZ,IAAI,CAAC,CAAC,CAAC,CAACgB,KAAK,CAAG,IAAI,CAC5CC,UAAU,CAAEC,IAAI,CAACC,KAAK,CAAClB,WAAE,CAACmB,QAAQ,CAAC,CAAC,CAAGF,IAAI,CAACG,GAAG,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC,CACzD;AACAC,QAAQ,CAAE,GAAAC,iBAAgB,EAAC,CAAC,CAC5BC,QAAQ,CAAEtB,UAAU,GAAK,MAAM,CAC/BuB,IAAI,CAAEhD,aAAa,CAACgD,IAAI,CACxBC,MAAM,CAAGjD,aAAa,CAACgD,IAAI,EAAIhD,aAAa,CAACkD,IAAI,EAAK,IACxD,CAAC,CAED,MAAO,CAAA7B,MAAM,CACf","ignoreList":[]}